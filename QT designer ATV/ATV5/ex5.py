# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'ex5.ui'
#
# Created by: PyQt5 UI code generator 5.15.11
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets
from PyQt5.QtWidgets import QFileDialog


class Ui_MainWindow(object):
    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(741, 647)
        MainWindow.setCursor(QtGui.QCursor(QtCore.Qt.ArrowCursor))
        MainWindow.setStyleSheet("")
        MainWindow.setTabShape(QtWidgets.QTabWidget.Rounded)
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setObjectName("centralwidget")
        self.label_2 = QtWidgets.QLabel(self.centralwidget)
        self.label_2.setGeometry(QtCore.QRect(590, 190, 781, 191))
        self.label_2.setStyleSheet("color: rgb(255, 255, 255);")
        self.label_2.setText("")
        self.label_2.setAlignment(QtCore.Qt.AlignCenter)
        self.label_2.setObjectName("label_2")
        self.textEdit = QtWidgets.QTextEdit(self.centralwidget)
        self.textEdit.setGeometry(QtCore.QRect(0, 0, 741, 601))
        self.textEdit.setStyleSheet("border:2px transparent;")
        self.textEdit.setObjectName("textEdit")
        self.textEdit.raise_()
        self.label_2.raise_()
        MainWindow.setCentralWidget(self.centralwidget)
        self.menubar = QtWidgets.QMenuBar(MainWindow)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 741, 21))
        self.menubar.setObjectName("menubar")
        self.Arquivo = QtWidgets.QMenu(self.menubar)
        self.Arquivo.setObjectName("Arquivo")
        MainWindow.setMenuBar(self.menubar)
        self.statusbar = QtWidgets.QStatusBar(MainWindow)
        self.statusbar.setObjectName("statusbar")
        MainWindow.setStatusBar(self.statusbar)
        self.actionSalvar = QtWidgets.QAction(MainWindow)
        self.actionSalvar.setObjectName("actionSalvar")
        self.actionAbrir = QtWidgets.QAction(MainWindow)
        self.actionAbrir.setObjectName("actionAbrir")
        self.actionSalvar_2 = QtWidgets.QAction(MainWindow)
        self.actionSalvar_2.setObjectName("actionSalvar_2")
        self.actionSair = QtWidgets.QAction(MainWindow)
        self.actionSair.setObjectName("actionSair")
        self.Arquivo.addAction(self.actionSalvar)
        self.Arquivo.addAction(self.actionAbrir)
        self.Arquivo.addAction(self.actionSalvar_2)
        self.Arquivo.addAction(self.actionSair)
        self.menubar.addAction(self.Arquivo.menuAction())

        self.retranslateUi(MainWindow)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "MainWindow"))
        self.Arquivo.setTitle(_translate("MainWindow", "Arquivo"))
        self.actionSalvar.setText(_translate("MainWindow", "Novo"))
        self.actionSalvar.setShortcut(_translate("MainWindow", "Ctrl+N"))
        self.actionAbrir.setText(_translate("MainWindow", "Abrir"))
        self.actionAbrir.setShortcut(_translate("MainWindow", "Ctrl+O"))
        self.actionSalvar_2.setText(_translate("MainWindow", "Salvar"))
        self.actionSalvar_2.setShortcut(_translate("MainWindow", "Ctrl+S"))
        self.actionSair.setText(_translate("MainWindow", "Sair"))

    def novo(self):
        self.textEdit.setText("")
    
    def salvar(self):
        texto = self.textEdit.toPlainText()
        arquivo, _ = QFileDialog.getSaveFileName(None, "Salvar Arquivo", "", "Arquivos de Texto (*.txt);;Todos os Arquivos (*)")

        if arquivo:  
            try:
                with open(arquivo, "w", encoding="utf-8") as file:
                    file.write(texto)
                print(f"Arquivo salvo em: {arquivo}")
            except Exception as e:
                print(f"Erro ao salvar o arquivo: {e}")

    def abrir(self):
        arquivo, _ = QFileDialog.getOpenFileName(None, "Abrir Arquivo", "", "Arquivos de Texto (*.txt);;Todos os Arquivos (*)")

        if arquivo: 
            try:
                with open(arquivo, "r", encoding="utf-8") as file:
                    texto = file.read()
                    self.textEdit.setText(texto)  
                print(f"Arquivo aberto: {arquivo}")
            except Exception as e:
                print(f"Erro ao abrir o arquivo: {e}")

    def sair(self):
        exit()
        


if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    MainWindow = QtWidgets.QMainWindow()
    ui = Ui_MainWindow()
    ui.setupUi(MainWindow)
    ui.actionSalvar.triggered.connect(ui.novo)
    ui.actionSalvar_2.triggered.connect(ui.salvar)
    ui.actionAbrir.triggered.connect(ui.abrir)
    ui.actionSair.triggered.connect(ui.sair)
    MainWindow.show()
    sys.exit(app.exec_())
